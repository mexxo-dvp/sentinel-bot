on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

name: sentinel-bot CI/CD

on:
  push:
    branches: [ "develop" ]
    paths-ignore:
      - 'helm/sentinel-bot/values.yaml'
      - 'helm/sentinel-bot/Chart.yaml'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

env:
  OWNER: ${{ github.repository_owner }}
  IMAGE: ghcr.io/${{ github.repository_owner }}/sentinel-bot
  OS: linux
  ARCH: amd64

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with tags history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Derive version variables
        id: vars
        run: |
          sha_short="$(git rev-parse --short=7 "$GITHUB_SHA")"
          base_tag="$(git describe --tags --abbrev=0 --match 'v*' 2>/dev/null || echo v1.0.0)"
          echo "sha_short=${sha_short}" >> "$GITHUB_OUTPUT"
          echo "base_tag=${base_tag}"   >> "$GITHUB_OUTPUT"
          echo "tag=${base_tag}-${sha_short}" >> "$GITHUB_OUTPUT"
          echo "full_tag=${base_tag}-${sha_short}-${{ env.OS }}-${{ env.ARCH }}" >> "$GITHUB_OUTPUT"

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push (linux/amd64)
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.IMAGE }}:${{ steps.vars.outputs.full_tag }}
            ${{ env.IMAGE }}:${{ steps.vars.outputs.tag }}
            ${{ env.IMAGE }}:${{ steps.vars.outputs.tag }}-amd64
            ${{ env.IMAGE }}:develop
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.vars.outputs.tag }}

      - name: Install yq
        run: |
          sudo curl -fsSL -o /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
          yq --version

      - name: Bump Helm values & Chart appVersion (sync image.* and top-level keys)
        run: |
          set -euo pipefail
          yq -i ".image.repository = \"ghcr.io/${{ env.OWNER }}/sentinel-bot\"" helm/sentinel-bot/values.yaml
          yq -i ".image.tag = \"${{ steps.vars.outputs.tag }}\""        helm/sentinel-bot/values.yaml
          yq -i ".image.os = \"${{ env.OS }}\""                         helm/sentinel-bot/values.yaml
          yq -i ".image.arch = \"${{ env.ARCH }}\""                     helm/sentinel-bot/values.yaml
          yq -i ".repository = \"ghcr.io/${{ env.OWNER }}/sentinel-bot\""       helm/sentinel-bot/values.yaml
          yq -i ".tag = \"${{ steps.vars.outputs.tag }}\""              helm/sentinel-bot/values.yaml
          yq -i ".os = \"${{ env.OS }}\""                               helm/sentinel-bot/values.yaml
          yq -i ".arch = \"${{ env.ARCH }}\""                           helm/sentinel-bot/values.yaml
          yq -i ".appVersion = \"${{ steps.vars.outputs.base_tag }}\""  helm/sentinel-bot/Chart.yaml
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add helm/sentinel-bot/values.yaml helm/sentinel-bot/Chart.yaml
          if git diff --cached --quiet; then
            echo "No chart changes."
            exit 0
          fi
          git commit -m "ci(helm): ghcr repo + tag=${{ steps.vars.outputs.tag }} os=${{ env.OS }} arch=${{ env.ARCH }} appVersion=${{ steps.vars.outputs.base_tag }}"
          n=0
          until [ $n -ge 3 ]; do
            if git pull --rebase origin develop; then
              break
            fi
            echo "Rebase failed, retry $((n+1))/3"; git rebase --abort || true; n=$((n+1)); sleep 2
          done
          git push origin HEAD:develop
