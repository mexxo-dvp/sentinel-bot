package cmd

import (
	"fmt"
	"log"
	"os"
	"time"

	"github.com/spf13/cobra"
	"gopkg.in/telebot.v3"
)

// –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫—É Telegram-–±–æ—Ç–∞
var sentinelBotCmd = &cobra.Command{
	Use:     "sentinel-bot",        // —ñ–º‚Äô—è CLI-–∫–æ–º–∞–Ω–¥–∏ –æ–∫
	Aliases: []string{"start", "bot"},
	Short:   "–ó–∞–ø—É—Å–∫–∞—î Telegram –±–æ—Ç–∞",
	Long:    "–ó–∞–ø—É—Å–∫–∞—î Telegram –±–æ—Ç–∞ (telebot). –ü–æ—Ç—Ä—ñ–±–Ω–∞ –∑–º—ñ–Ω–Ω–∞ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ TELE_TOKEN.",
	Run: func(cmd *cobra.Command, args []string) {
		fmt.Printf("üîß –ó–∞–ø—É—Å–∫ sentinel-bot –≤–µ—Ä—Å—ñ—ó: %s\n", appVersion)

		teleToken := os.Getenv("TELE_TOKEN")
		if teleToken == "" {
			log.Fatal("‚ùå TELE_TOKEN –Ω–µ –∑–∞–¥–∞–Ω–æ")
		}

		pref := telebot.Settings{
			Token:  teleToken,
			Poller: &telebot.LongPoller{Timeout: 10 * time.Second},
		}

		bot, err := telebot.NewBot(pref)
		if err != nil {
			log.Fatalf("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –±–æ—Ç–∞: %v", err)
		}

		bot.Handle(telebot.OnText, func(c telebot.Context) error {
			msg := c.Text()
			log.Printf("üì© %s", msg)
			return c.Send("–¢–∏ –Ω–∞–ø–∏—Å–∞–≤: " + msg)
		})

		fmt.Println("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ. –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å‚Ä¶")
		bot.Start()
	},
}

func init() {
	rootCmd.AddCommand(sentinelBotCmd)
}
