package cmd

import (
	"fmt"
	"log"
	"os"
	"time"

	"github.com/spf13/cobra"
	"gopkg.in/telebot.v3"
)

// sentinel-botCmd –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –∫–æ–º–∞–Ω–¥—É –∑–∞–ø—É—Å–∫—É Telegram-–±–æ—Ç–∞
var kbotCmd = &cobra.Command{
	Use:     "sentinel-bot",
	Aliases: []string{"start"},
	Short:   "–ó–∞–ø—É—Å–∫–∞—î Telegram –±–æ—Ç–∞",
	Long: `–¶—è –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞—î Telegram –±–æ—Ç–∞ –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ telebot.
–ü–æ—Ç—Ä—ñ–±–Ω–æ, —â–æ–± –±—É–ª–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∑–º—ñ–Ω–Ω–∞ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ TELE_TOKEN.`,
	Run: func(cmd *cobra.Command, args []string) {
		// –í–∏–≤–æ–¥–∏–º–æ –≤–µ—Ä—Å—ñ—é
		fmt.Printf("üîß –ó–∞–ø—É—Å–∫ sentinel-bot –≤–µ—Ä—Å—ñ—ó: %s\n", appVersion)

		// –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω –∑ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
		teleToken := os.Getenv("TELE_TOKEN")
		if teleToken == "" {
			log.Fatal("‚ùå –ó–º—ñ–Ω–Ω–∞ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ TELE_TOKEN –Ω–µ –∑–∞–¥–∞–Ω–∞. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å —ó—ó –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º.")
		}

		// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–æ—Ç–∞
		pref := telebot.Settings{
			Token:  teleToken,
			Poller: &telebot.LongPoller{Timeout: 10 * time.Second},
		}

		// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
		bot, err := telebot.NewBot(pref)
		if err != nil {
			log.Fatalf("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –±–æ—Ç–∞: %v", err)
		}

		// –•–µ–Ω–¥–ª–µ—Ä –Ω–∞ –≤—Ö—ñ–¥–Ω—ñ —Ç–µ–∫—Å—Ç–æ–≤—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
		bot.Handle(telebot.OnText, func(c telebot.Context) error {
			payload := c.Text()
			log.Printf("üì© –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: %s", payload)
			return c.Send("–¢–∏ –Ω–∞–ø–∏—Å–∞–≤: " + payload)
		})

		// –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
		fmt.Println("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ. –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å...")
		bot.Start()
	},
}

func init() {
	rootCmd.AddCommand(sentinel-botCmd)
}
